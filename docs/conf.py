# -*- coding: utf-8 -*-
#
# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
# import os
# import sys
# sys.path.insert(0, os.path.abspath('.'))

import os.path
import sys

BASE_DIR = os.path.realpath(os.path.join(os.path.dirname(__file__)))
sys.path.append(os.path.join(BASE_DIR, '..'))

# -- General configuration ------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
#
# needs_sphinx = '1.0'

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = ['sphinx.ext.viewcode', 'sphinx.ext.autodoc', 'sphinx.ext.intersphinx']

autodoc_member_order = 'bysource'

intersphinx_mapping = {
    'python': ('https://docs.python.org/2.7', None),
    'cassandra': ('https://datastax.github.io/python-driver/', None),
}


# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
#
# source_suffix = ['.rst', '.md']
source_suffix = '.rst'

# The master toctree document.
master_doc = 'index'

# General information about the project.
project = u'Monique Dashboards'
copyright = u'2017, Monique Dashboards'
author = u'Monique Dashboards'

# The version info for the project you're documenting, acts as replacement for
# |version| and |release|, also used in various other places throughout the
# built documents.
#
# The short X.Y version.
version = u'1.0'
# The full version, including alpha/beta/rc tags.
release = u'1.0'

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = None

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This patterns also effect to html_static_path and html_extra_path
exclude_patterns = ['_build', 'Thumbs.db', '.DS_Store']

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = 'sphinx'

# If true, `todo` and `todoList` produce output, else they produce nothing.
todo_include_todos = False


# -- Options for HTML output ----------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
#html_theme = 'alabaster'

html_theme_path = ['_themes']
html_theme = 'sphinx_rtd_theme'

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
#
# html_theme_options = {}

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['_static']

# Custom sidebar templates, must be a dictionary that maps document names
# to template names.
#
# This is required for the alabaster theme
# refs: http://alabaster.readthedocs.io/en/latest/installation.html#sidebars
html_sidebars = {
    '**': [
        'about.html',
        'navigation.html',
        'relations.html',  # needs 'show_related': True theme option to display
        'searchbox.html',
    ]
}


# -- Options for HTMLHelp output ------------------------------------------

# Output file base name for HTML help builder.
htmlhelp_basename = 'MqeDocs'

rst_prolog = """
.. |Report| replace:: :class:`~mqe.reports.Report`
.. |SeriesSpec| replace:: :class:`~mqe.dataseries.SeriesSpec`
.. |Tile| replace:: :class:`~mqe.tiles.Tile`
.. |Layout| replace:: :class:`~mqe.layouts.Layout`
.. |tile_options| replace:: :data:`tile_options`
.. |tile_config| replace:: :data:`tile_config`
.. |lmr| replace:: :class:`~mqe.layouts.LayoutModificationResult`
.. |pi| replace:: :meth:`~mqe.class.Report.process_input`
.. |layout_dict| replace:: :attr:`~mqe.layouts.Layout.layout_dict` 
.. |layout_id| replace:: :attr:`~mqe.layouts.Layout.layout_id`
.. |tile_id| replace:: :attr:`~mqe.tiles.Tile.tile_id`
.. |rid| replace:: :attr:`~mqe.reports.ReportInstance.report_instance_id`
"""


